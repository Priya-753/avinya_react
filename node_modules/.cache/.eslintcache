[{"/Users/Priya/Documents/Start Up Old/webapp/src/index.js":"1","/Users/Priya/Documents/Start Up Old/webapp/src/App.js":"2","/Users/Priya/Documents/Start Up Old/webapp/src/reportWebVitals.js":"3","/Users/Priya/Documents/Start Up Old/webapp/src/containerComponents/MainComponent.js":"4","/Users/Priya/Documents/Start Up Old/webapp/src/redux/configureStore.js":"5","/Users/Priya/Documents/Start Up Old/webapp/src/containerComponents/MenuComponent.js":"6","/Users/Priya/Documents/Start Up Old/webapp/src/redux/dishes.js":"7","/Users/Priya/Documents/Start Up Old/webapp/src/redux/sagas.js":"8","/Users/Priya/Documents/Start Up Old/webapp/src/redux/leaders.js":"9","/Users/Priya/Documents/Start Up Old/webapp/src/redux/promotions.js":"10","/Users/Priya/Documents/Start Up Old/webapp/src/redux/comments.js":"11","/Users/Priya/Documents/Start Up Old/webapp/src/redux/ActionCreators.js":"12","/Users/Priya/Documents/Start Up Old/webapp/src/presentationalComponents/FooterComponent.js":"13","/Users/Priya/Documents/Start Up Old/webapp/src/shared/promotions.js":"14","/Users/Priya/Documents/Start Up Old/webapp/src/shared/leaders.js":"15","/Users/Priya/Documents/Start Up Old/webapp/src/shared/comments.js":"16","/Users/Priya/Documents/Start Up Old/webapp/src/presentationalComponents/HomeComponent.js":"17","/Users/Priya/Documents/Start Up Old/webapp/src/presentationalComponents/HeaderComponent.js":"18","/Users/Priya/Documents/Start Up Old/webapp/src/presentationalComponents/DishDetailComponent.js":"19","/Users/Priya/Documents/Start Up Old/webapp/src/shared/dishes.js":"20","/Users/Priya/Documents/Start Up Old/webapp/src/presentationalComponents/AboutComponent.js":"21","/Users/Priya/Documents/Start Up Old/webapp/src/presentationalComponents/ContactComponent.js":"22","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/alert/Alert.js":"23","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/constants.js":"24","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/button/Button.js":"25","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/dropdown/Dropdown.js":"26","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/form/FormGroup.js":"27","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/form/Form.js":"28","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/button/ButtonGroup.js":"29","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/card/CardGroup.js":"30","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/card/Card.js":"31","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/card/Modal.js":"32","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/card/Carousel.js":"33","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/nav/Nav.js":"34","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/card/Table.js":"35","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/alert/AlertLink.js":"36","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/Base.js":"37","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/nav/Tab.js":"38","/Users/Priya/Documents/Start Up Old/webapp/src/redux/selectors.js":"39","/Users/Priya/Documents/Start Up Old/webapp/src/redux/ActionTypes.js":"40","/Users/Priya/Documents/Start Up Old/webapp/src/shared/baseUrl.js":"41","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/utils.js":"42","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/card/CarouselIndicator.js":"43"},{"size":639,"mtime":1621681624964,"results":"44","hashOfConfig":"45"},{"size":574,"mtime":1623064162317,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":1621479394255,"results":"47","hashOfConfig":"45"},{"size":3786,"mtime":1622168142761,"results":"48","hashOfConfig":"45"},{"size":836,"mtime":1622167662232,"results":"49","hashOfConfig":"45"},{"size":2076,"mtime":1622124208582,"results":"50","hashOfConfig":"45"},{"size":370,"mtime":1622167593193,"results":"51","hashOfConfig":"45"},{"size":420,"mtime":1622167624540,"results":"52","hashOfConfig":"45"},{"size":375,"mtime":1622167599274,"results":"53","hashOfConfig":"45"},{"size":665,"mtime":1621907604302,"results":"54","hashOfConfig":"45"},{"size":615,"mtime":1621907594926,"results":"55","hashOfConfig":"45"},{"size":5176,"mtime":1640073178778,"results":"56","hashOfConfig":"45"},{"size":2556,"mtime":1621750796191,"results":"57","hashOfConfig":"45"},{"size":436,"mtime":1621780044887,"results":"58","hashOfConfig":"45"},{"size":2346,"mtime":1621780046131,"results":"59","hashOfConfig":"45"},{"size":4118,"mtime":1621779957169,"results":"60","hashOfConfig":"45"},{"size":1267,"mtime":1621997362380,"results":"61","hashOfConfig":"45"},{"size":12817,"mtime":1634288056445,"results":"62","hashOfConfig":"45"},{"size":2189,"mtime":1621907791889,"results":"63","hashOfConfig":"45"},{"size":1429,"mtime":1621780043673,"results":"64","hashOfConfig":"45"},{"size":4483,"mtime":1624931498525,"results":"65","hashOfConfig":"45"},{"size":9926,"mtime":1622167822399,"results":"66","hashOfConfig":"45"},{"size":711,"mtime":1634288764925,"results":"67","hashOfConfig":"45"},{"size":610,"mtime":1624348238504,"results":"68","hashOfConfig":"45"},{"size":1600,"mtime":1634215903637,"results":"69","hashOfConfig":"45"},{"size":3602,"mtime":1634216144756,"results":"70","hashOfConfig":"45"},{"size":6092,"mtime":1634215903641,"results":"71","hashOfConfig":"45"},{"size":371,"mtime":1634288205154,"results":"72","hashOfConfig":"45"},{"size":2041,"mtime":1634215903613,"results":"73","hashOfConfig":"45"},{"size":827,"mtime":1634215903649,"results":"74","hashOfConfig":"45"},{"size":2336,"mtime":1634215903645,"results":"75","hashOfConfig":"45"},{"size":1548,"mtime":1634215903595,"results":"76","hashOfConfig":"45"},{"size":3141,"mtime":1634215903633,"results":"77","hashOfConfig":"45"},{"size":2102,"mtime":1634215903621,"results":"78","hashOfConfig":"45"},{"size":1353,"mtime":1634215903659,"results":"79","hashOfConfig":"45"},{"size":854,"mtime":1634215903625,"results":"80","hashOfConfig":"45"},{"size":2686,"mtime":1634287317852,"results":"81","hashOfConfig":"45"},{"size":1427,"mtime":1634215903604,"results":"82","hashOfConfig":"45"},{"size":186,"mtime":1622167640135,"results":"83","hashOfConfig":"45"},{"size":490,"mtime":1622120505733,"results":"84","hashOfConfig":"45"},{"size":50,"mtime":1633095138278,"results":"85","hashOfConfig":"45"},{"size":1014,"mtime":1624348276163,"results":"86","hashOfConfig":"45"},{"size":868,"mtime":1634215903654,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kvs2bg",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},"/Users/Priya/Documents/Start Up Old/webapp/src/index.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/App.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/reportWebVitals.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/containerComponents/MainComponent.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/redux/configureStore.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/containerComponents/MenuComponent.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/redux/dishes.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/redux/sagas.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/redux/leaders.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/redux/promotions.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/redux/comments.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/redux/ActionCreators.js",["186"],"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst axios = require('axios');\n\nexport const addComment = (dishId, rating, author, comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n});\n\nexport const fetchDishesAxios = () => (dispatch) => {\n    dispatch(addDishes([\n                                   {\n                                   id: 0,\n                                   name:'Uthappizza',\n                                   image: '/assets/images/uthappizza.png',\n                                   category: 'mains',\n                                   label:'Hot',\n                                   price:'4.99',\n                                   featured: true,\n                                   description:'A unique combination of Indian Uthappam (pancake) and Italian pizza, topped with Cerignola olives, ripe vine cherry tomatoes, Vidalia onion, Guntur chillies and Buffalo Paneer.'\n                                   },\n                                   {\n                                   id: 1,\n                                   name:'Zucchipakoda',\n                                   image: '/assets/images/zucchipakoda.png',\n                                   category: 'appetizer',\n                                   label:'',\n                                   price:'1.99',\n                                   featured: false,\n                                   description:'Deep fried Zucchini coated with mildly spiced Chickpea flour batter accompanied with a sweet-tangy tamarind sauce'\n                                   },\n                                   {\n                                   id: 2,\n                                   name:'Vadonut',\n                                   image: '/assets/images/vadonut.png',\n                                   category: 'appetizer',\n                                   label:'New',\n                                   price:'1.99',\n                                   featured: false,\n                                   description:'A quintessential ConFusion experience, is it a vada or is it a donut?'\n                                   },\n                                   {\n                                   id: 3,\n                                   name:'ElaiCheese Cake',\n                                   image: '/assets/images/elaicheesecake.png',\n                                   category: 'dessert',\n                                   label:'',\n                                   price:'2.99',\n                                   featured: false,\n                                   description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms'\n                                   }\n                               ]\n));\n    axios.get(baseUrl + 'dishes')\n      .then(function (response) {\n        console.log(response);\n        dispatch(addDishes(response.data));\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n      });\n};\n\nexport const fetchDishes = () => ({\n    type: ActionTypes.DISHES_FETCH\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishesdishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {\n    axios.get(baseUrl + 'comments')\n      .then(function (response) {\n        console.log(response);\n        dispatch(addComments(response.data));\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n      });\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading());\n\n    axios.get(baseUrl + 'promotions')\n      .then(function (response) {\n        console.log(response);\n        dispatch(addPromos(response.data));\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n      });\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n    axios.get(baseUrl + 'leaders')\n      .then(function (response) {\n        console.log(response);\n        dispatch(addLeaders(response.data));\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n      });\n};\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});","/Users/Priya/Documents/Start Up Old/webapp/src/presentationalComponents/FooterComponent.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/shared/promotions.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/shared/leaders.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/shared/comments.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/presentationalComponents/HomeComponent.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/presentationalComponents/HeaderComponent.js",["187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205"],"import { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\n    Modal, ModalHeader, ModalBody,\n    Form, FormGroup, Input, Label, CardDeck, Card, CardBody, CardSubtitle, CardTitle, CardImg, CardText, Button } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport React , {Component} from 'react'\nimport IButton from '../basicComponents/button/Button.js';\nimport IAlert from '../basicComponents/alert/Alert.js';\nimport {withScroll, withToggle, withDismiss} from '../basicComponents/Base.js';\nimport IAlertLink from '../basicComponents/alert/AlertLink.js';\nimport IDropdown from '../basicComponents/dropdown/Dropdown.js';\nimport IFormGroup from '../basicComponents/form/FormGroup.js';\nimport IForm from '../basicComponents/form/Form.js';\nimport IButtonGroup from '../basicComponents/button/ButtonGroup.js';\nimport ICard from '../basicComponents/card/Card.js';\nimport ICardGroup from '../basicComponents/card/CardGroup.js';\nimport ICarousel from '../basicComponents/card/Carousel.js';\nimport ITable from '../basicComponents/card/Table.js';\nimport INav from '../basicComponents/nav/Nav.js';\nimport ITab from '../basicComponents/nav/Tab.js';\nimport * as CONSTANTS from '../basicComponents/constants.js'\nimport { Media } from 'reactstrap';\nimport { Container, Row, Col, CardGroup, CardColumns } from 'reactstrap';\nimport Select from 'react-select';\n\nconst FormWithScroll = withScroll(IForm);\nconst AlertWithToggle = withDismiss(withToggle(IAlert));\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n\n        this.state = {\n          isNavOpen: false,\n          isModalOpen: false\n        };\n      }\n\n      toggleNav() {\n        this.setState({\n          isNavOpen: !this.state.isNavOpen\n        });\n      }\n\n      toggleModal() {\n        this.setState({\n          isModalOpen: !this.state.isModalOpen\n        });\n      }\n\n      handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n            + \" Remember: \" + this.remember.checked);\n        event.preventDefault();\n\n    }\n\n    handleButtonsSelection(selectedButtons) {\n        console.log(\"Header Components\");\n        console.log(selectedButtons);\n    }\n\n    render() {\n        const Countries = [\n          { label: \"Albania\", value: 355 },\n          { label: \"Argentina\", value: 54 },\n          { label: \"Austria\", value: 43 },\n          { label: \"Cocos Islands\", value: 61 },\n          { label: \"Kuwait\", value: 965 },\n          { label: \"Sweden\", value: 46 },\n          { label: \"Venezuela\", value: 58 }\n        ];\n\n        const customStyles = {\n          menu: (provided, state) => ({\n            ...provided,\n            width: state.selectProps.width,\n            borderBottom: '1px dotted pink',\n            color: state.selectProps.menuColor,\n            padding: 20,\n          }),\n\n          control: (_, { selectProps: { width }}) => ({\n            width: width\n          }),\n\n          singleValue: (provided, state) => {\n            const opacity = state.isDisabled ? 0.5 : 1;\n            const transition = 'opacity 300ms';\n\n            return { ...provided, opacity, transition };\n          }\n        }\n\n        const items = [\n          {\n            src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa1d%20text%20%7B%20fill%3A%23555%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa1d%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23777%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22285.921875%22%20y%3D%22218.3%22%3EFirst%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\n            altText: 'Slide 1',\n            caption: 'Slide 1',\n            id: 1\n          },\n          {\n            src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa20%20text%20%7B%20fill%3A%23444%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa20%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23666%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22247.3203125%22%20y%3D%22218.3%22%3ESecond%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\n            altText: 'Slide 2',\n            caption: 'Slide 2',\n            id: 2\n          },\n          {\n            src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa21%20text%20%7B%20fill%3A%23333%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa21%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23555%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22277%22%20y%3D%22218.3%22%3EThird%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\n            altText: 'Slide 3',\n            caption: 'Slide 3',\n            id: 3\n          }\n        ];\n\n        const toggleButton = <IButton size=\"sm\" > Show toggling </IButton>\n\n        const tab1 = (<ITable headingRow={['A', 'B', 'C']} rows={[[1,2,3], [4,5,6]]} striped hover bordered/>);\n        const tab2 = (<ITable headingRow={['D', 'E', 'F']} rows={[[1,2,3], [4,5,6]]} striped hover bordered/>);\n        return (\n        <div>\n            <div>\n                <INav />\n                <Select styles={customStyles} options={Countries} isMulti isSearchabe menuPlacement=\"top\"/>\n                <IButtonGroup type=\"checkBox\" onSelected={this.handleButtonsSelection} >\n                    <IButton color=\"primary\" > 1 </IButton>\n                    <IButton color=\"primary\" > 2 </IButton>\n                    <IButton color=\"primary\" > 3 </IButton>\n                </IButtonGroup>\n                <IButtonGroup type=\"radio\">\n                   <IButton color=\"primary\" > 1 </IButton>\n                   <IButton color=\"primary\" > 2 </IButton>\n                   <IButton color=\"primary\" > 3 </IButton>\n                </IButtonGroup>\n                <IButton outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</IButton>\n                <IButton color=\"primary\" name=\"Toggle\" size=\"sm\" toggle/>\n                <hr />\n                <ITable headingRow={['A', 'B', 'C']} rows={[[1,2,3], [4,5,6]]} striped hover bordered/>\n                <ITab tabs={[{tabHeading: 'Tab 1', tabContent: tab1}, {tabHeading: 'Tab 2', tabContent: tab2}]}/>\n                <IDropdown color=\"success\" size=\"sm\" direction=\"right\" actions={[{name: '1', status: 'header'}, {name: '2', href: \"/menu\",\n                            submenu: { actions: [{name: '2.1'}, {name: '2.2'}, {name: '2.3'}, {name: '2.4'}]}}]}>C</IDropdown>\n                <IDropdown actions={[{id: 1, key: 1, name: \"Apple\"}, {id: 2, key: 2, name: \"Mango\", status: 'disabled'}, {id: 3, key: 3, name: \"Orange\", status: 'divider'}, {id: 4, key: 4, name: \"Banana\", status: 'header'}]} color=\"info\" size=\"sm\" direction=\"right\"/>\n                <AlertWithToggle color=\"success\" toggle fade={false}> Success Alert <IAlertLink href=\"https://www.google.com/\" /> </AlertWithToggle>\n                <FormWithScroll>\n                    <IFormGroup type={CONSTANTS.TEXT} id=\"text1\" label=\"Text 1\" onChange={(e) => {console.log(e.target.value)}}/>\n                    <IFormGroup type={CONSTANTS.EMAIL} id=\"email1\" label=\"Email 1\"/>\n                    <IFormGroup type={CONSTANTS.PASSWORD} id=\"p1\" label=\"Password 1\"/>\n                    <IFormGroup type={CONSTANTS.SELECT} id=\"s1\" label=\"Select 1\" options={[1, 2, 3, 4, 5]} onChange={(e) => {console.log(e.target.value)}}/>\n                    <IFormGroup type={CONSTANTS.MULTI_SELECT} id=\"ms1\" label=\"Select 1\" options={[1, 2, 3, 4, 5]} onChange={(e) => {console.log(e.target.value)}}/>\n                    <IFormGroup type={CONSTANTS.FILE} id=\"file1\" label=\"File 1\" fileExtensions={[\"pdf\"]} fileSize=\"3KB\"/>\n                    <IFormGroup type={CONSTANTS.URL} id=\"url1\" label=\"Url 1\" />\n                    <IFormGroup type={CONSTANTS.RADIO} id=\"num1\" label=\"Num 1\" />\n                </FormWithScroll>\n            </div>\n            <div>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\n                            </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                        <NavItem>\n                                            <IButton outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</IButton>\n                                        </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                    <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input}  />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                    innerRef={(input) => this.remember = input}  />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <IButton color=\"primary\" name=\"Login\" size=\"sm\"/>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","/Users/Priya/Documents/Start Up Old/webapp/src/presentationalComponents/DishDetailComponent.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/shared/dishes.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/presentationalComponents/AboutComponent.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/presentationalComponents/ContactComponent.js",["206","207","208","209"],"import { Link } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem,  Row, Col, Label} from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nclass Contact extends Component {\n  constructor(props) {\n        super(props);\n\n        this.state = {\n            firstname: '',\n            lastname: '',\n            telnum: '',\n            email: '',\n            agree: false,\n            contactType: 'Tel.',\n            message: '',\n            touched: {\n                firstname: false,\n                lastname: false,\n                telnum: false,\n                email: false\n            }\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n          [name]: value\n        });\n    }\n\n    handleSubmit(event) {\n        console.log('Current State is: ' + JSON.stringify(this.state));\n        alert('Current State is: ' + JSON.stringify(this.state));\n        // event.preventDefault();\n    }\n\n    handleBlur = (field) => (evt) => {\n        this.setState({\n            touched: { ...this.state.touched, [field]: true }\n        });\n    }\n\n    validate(firstname, lastname, telnum, email) {\n        const errors = {\n            firstname: '',\n            lastname: '',\n            telnum: '',\n            email: ''\n        };\n\n        if (this.state.touched.firstname && firstname.length < 3)\n            errors.firstname = 'First Name should be >= 3 characters';\n        else if (this.state.touched.firstname && firstname.length > 10)\n            errors.firstname = 'First Name should be <= 10 characters';\n\n        if (this.state.touched.lastname && lastname.length < 3)\n            errors.lastname = 'Last Name should be >= 3 characters';\n        else if (this.state.touched.lastname && lastname.length > 10)\n            errors.lastname = 'Last Name should be <= 10 characters';\n\n        const reg = /^\\d+$/;\n        if (this.state.touched.telnum && !reg.test(telnum))\n            errors.telnum = 'Tel. Number should contain only numbers';\n\n        if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\n            errors.email = 'Email should contain a @';\n\n        return errors;\n    }\n\n  render () {\n    const required = (val) => val && val.length;\n    const maxLength = (len) => (val) => !(val) || (val.length <= len);\n    const minLength = (len) => (val) => val && (val.length >= len);\n    const isNumber = (val) => !isNaN(Number(val));\n    const validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n    return(\n        <div className=\"container\">\n          <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>Contact Us</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                <h3>Location Information</h3>\n                </div>\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                </div>\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\n                    <h5>Map of our Location</h5>\n                </div>\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\n                    <div className=\"btn-group\" role=\"group\">\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                   <div className=\"col-12\">\n                      <h3>Send us your Feedback</h3>\n                   </div>\n\n                    <div className=\"col-12 col-md-9\">\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                            <Col md={10}>\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                    placeholder=\"First Name\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                    }}\n                                     />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".firstname\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Must be greater than 2 characters',\n                                        maxLength: 'Must be 15 characters or less'\n                                    }}\n                                 />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                            <Col md={10}>\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                    placeholder=\"Last Name\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                    }}\n                                     />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".lastname\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Must be greater than 2 characters',\n                                        maxLength: 'Must be 15 characters or less'\n                                    }}\n                                 />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                            <Col md={10}>\n                                <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                    placeholder=\"Tel. Number\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                    }}\n                                     />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".telnum\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Must be greater than 2 numbers',\n                                        maxLength: 'Must be 15 numbers or less',\n                                        isNumber: 'Must be a number'\n                                    }}\n                                 />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"email\" md={2}>Email</Label>\n                            <Col md={10}>\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                    placeholder=\"Email\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required, validEmail\n                                    }}\n                                     />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".email\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        validEmail: 'Invalid Email Address'\n                                    }}\n                                 />\n                            </Col>\n                        </Row>\n                        </LocalForm>\n                    </div>\n               </div>\n        </div>\n    );\n  }\n}\n\nexport default Contact;\n","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/alert/Alert.js",["210"],"import React  from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert as RSAlert } from 'reactstrap';\n\nconst propTypes = {\n  color: PropTypes.string\n};\n\nconst defaultProps = {\n  color: 'primary',\n};\n\nfunction IAlert = () => {\n\n  render() {\n    let {\n      color,\n      ...attributes\n    } = this.props;\n\n    if (attributes.children === undefined) {\n       attributes.children = <p>This is an alert. </p>\n    }\n\n    const alert = (\n      <RSAlert\n        color = {color}\n        {...attributes}\n      >\n        {attributes.children}\n      </RSAlert>\n    );\n\n    return alert;\n  }\n}\n\nIAlert.propTypes = propTypes;\nIAlert.defaultProps = defaultProps;\nIAlert.displayName = 'IAlert';\n\nexport default IAlert;","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/constants.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/button/Button.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/dropdown/Dropdown.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/form/FormGroup.js",["211","212","213","214","215","216","217","218","219","220","221","222","223","224"],"import React  from 'react';\nimport PropTypes from 'prop-types';\nimport * as CONSTANTS from '../constants.js'\nimport { InputTypes } from '../utils.js'\nimport IButton from '../button/Button.js'\nimport IButtonGroup from '../button/ButtonGroup.js'\nimport { FormGroup as RSFormGroup, Label, Input, FormText, FormFeedback, CustomInput } from 'reactstrap';\nimport Select from 'react-select';\nimport _ from 'lodash';\n\nconst propTypes = {\n    type: PropTypes.oneOf(InputTypes),\n    id: PropTypes.string,\n    size: PropTypes.oneOf([CONSTANTS.LARGE, CONSTANTS.SMALL]),\n    label: PropTypes.string,\n    formText: PropTypes.string,\n    formFeedback: PropTypes.string,\n    fileExtensions: PropTypes.array,\n    fileSize: PropTypes.string\n};\n\nconst defaultProps = {\n    type: CONSTANTS.TEXT,\n    formText: \"Enter input\",\n    formFeedback: \"Wrong\",\n    fileExtensions: [\"jpeg\"],\n    fileSize: \"1MB\"\n};\n\nclass IFormGroup extends React.Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n          valid : true,\n          ...this.state\n      };\n  }\n\n  render() {\n    let {\n      type,\n      id,\n      label,\n      size,\n      formText,\n      formFeedback,\n      ...attributes\n    } = this.props;\n\n    let onChange = undefined;\n    if (attributes.onChange) {\n        onChange = attributes.onChange;\n    }\n\n    let input = <Input type={type} name={id} id={id} valid={this.state.valid} invalid={!this.state.valid} onChange={(e) => {\n                                               if (onChange !== undefined) {onChange(e);}}}/>;\n    let options;\n\n    switch (type)\n    {\n        case CONSTANTS.EMAIL:\n            if (onChange === undefined) {\n                onChange = (e) => {\n                    const emailRegex =\n                      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                    const { valid } = this.state;\n                    if (emailRegex.test(e.target.value)) {\n                        this.setState({ valid: true });\n                    } else {\n                        this.setState({ valid: false });\n                    }\n                }\n            }\n            break;\n\n        case CONSTANTS.PASSWORD:\n            if (onChange === undefined) {\n                onChange = (e) => {\n                    const passwordRegex =\n                      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n                    const { valid } = this.state;\n                    if (passwordRegex.test(e.target.value)) {\n                        this.setState({ valid: true });\n                    } else {\n                        this.setState({ valid: false });\n                    }\n                }\n                formFeedback = \"Password must contain minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character\";\n            }\n            break;\n\n        case CONSTANTS.SELECT:\n            options = _.map(attributes.options, (optionName) => {\n                                return {label: optionName, value: optionName}\n                              });\n            input = <Select options={options} isSearchabe maxMenuHeight={50}/>\n            break;\n        case CONSTANTS.MULTI_SELECT:\n            options = _.map(attributes.options, (optionName) => {\n                                return {label: optionName, value: optionName}\n                              });\n            input = <Select options={options} isSearchabe isMulti/>\n            break;\n        case CONSTANTS.FILE:\n            if (onChange === undefined) {\n                onChange = (e) => {\n                if (e.target.files.length > 0) {\n                    let fileNameParts = e.target.files[0].name.split(\".\");\n                    let fileExtension = fileNameParts[fileNameParts.length - 1];\n                    let fileSize = e.target.files[0].size;\n                    let allowedExtensions = attributes.fileExtensions;\n                    let allowedSize = attributes.fileSize;\n                    if (_.endsWith(allowedSize, \"KB\")) {\n                        allowedSize = allowedSize.replace(\"KB\", '') * 1024;\n                    } else if (_.endsWith(allowedSize, \"MB\")) {\n                        allowedSize = allowedSize.replace(\"MB\", '') * 1048576;\n                    } else if (_.endsWith(allowedSize, \"GB\")) {\n                        allowedSize = allowedSize.replace(\"GB\", '') * 1073741824;\n                    }\n                    if (_.indexOf(allowedExtensions, fileExtension) < 0) {\n                        this.setState({valid: false})\n                    } else if (fileSize > allowedSize) {\n                        this.setState({valid: false})\n                    } else {\n                        this.setState({valid: true})\n                    }\n                }}\n                formFeedback = \"Please upload files having extensions \" + attributes.fileExtensions + \" and of max size \" + attributes.fileSize;\n            }\n            break;\n        case CONSTANTS.URL:\n            if (onChange === undefined) {\n                onChange = (e) => {\n                    const urlRegex =\n                      /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/;\n                    const { valid } = this.state;\n                    if (urlRegex.test(e.target.value)) {\n                        this.setState({ valid: true });\n                    } else {\n                        this.setState({ valid: false });\n                    }\n                }\n            }\n            break;\n    }\n\n    const formGroup = (\n        <RSFormGroup>\n           <Label for={id}> {label} </Label>\n           {input}\n           <FormFeedback invalid={!this.state.valid}> {formFeedback} </FormFeedback>\n           <FormText color=\"muted\"> {formText} </FormText>\n        </RSFormGroup>\n    );\n\n    return formGroup;\n  }\n}\n\nIFormGroup.propTypes = propTypes;\nIFormGroup.defaultProps = defaultProps;\nIFormGroup.displayName = 'IFormGroup';\n\nexport default IFormGroup;","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/form/Form.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/button/ButtonGroup.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/card/CardGroup.js",["225","226","227","228","229"],"import React  from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport ICard from './Card.js';\nimport { Container, Row, Col, CardGroup } from 'reactstrap';\n\nconst propTypes = {\n  cardsPerRow: PropTypes.number\n};\n\nconst defaultProps = {\n  cardsPerRow: 4\n};\n\nclass ICardGroup extends React.Component {\n\n    render() {\n        let {\n          cardsPerRow,\n          ...attributes\n        } = this.props;\n\n        attributes.className=`row row-cols-md-${cardsPerRow} g-2`;\n\n        const cardGroup = (\n          <CardGroup\n            {...attributes}\n          >\n            {attributes.children}\n          </CardGroup>\n        );\n\n        return cardGroup;\n    }\n}\n\nICardGroup.propTypes = propTypes;\nICardGroup.defaultProps = defaultProps;\nICardGroup.displayName = 'ICardGroup';\n\nexport default ICardGroup;","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/card/Card.js",["230"],"import React  from 'react';\nimport PropTypes from 'prop-types';\nimport { Card as RSCard, CardHeader, CardFooter, CardBody, CardTitle, CardSubtitle, CardImgOverlay, CardImg } from 'reactstrap';\n\nconst propTypes = {\n  color: PropTypes.string,\n  cardTitle: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  textAlignment: PropTypes.oneOf([\"left\", \"center\", \"right\"]),\n  header: PropTypes.string,\n  footer: PropTypes.string,\n  image: PropTypes.shape({\n               src: PropTypes.string,\n               alt: PropTypes.string,\n               style: PropTypes.oneOf([\"thumbnail\"])\n             }),\n  imageOverlay: PropTypes.bool\n};\n\nconst defaultProps = {\n  color: 'primary',\n  textAlignment: 'left',\n  imageOverlay: false\n};\n\nclass ICard extends React.Component {\n\n  render() {\n    let {\n      color,\n      cardTitle,\n      subtitle,\n      textAlignment,\n      header,\n      footer,\n      image,\n      imageOverlay,\n      ...attributes\n    } = this.props;\n\n    let cardImage = null;\n    let textAlignmentClass;\n\n    if (attributes.children === undefined) {\n       attributes.children = <p>This is a card. </p>\n    }\n\n    if (image !== undefined) {\n        cardImage = <CardImg id={image.style} width={image.width} src={image.src} alt={image.alt} />\n    }\n\n    switch (textAlignment) {\n        case \"center\":\n            textAlignmentClass=\"text-center\";\n            break;\n        case \"right\":\n            textAlignmentClass=\"text-end\";\n            break;\n    }\n\n    const children = (\n        <div class={textAlignmentClass}>\n            <CardTitle tag=\"h5\">{cardTitle}</CardTitle>\n            {subtitle !== undefined ? <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\"> {subtitle} </CardSubtitle> : null}\n            {attributes.children}\n        </div>\n    );\n\n    const card = (\n      <RSCard\n        color = {color}\n        {...attributes}\n      >\n        {header !== undefined ? <CardHeader> { header } </CardHeader> : null}\n        {cardImage}\n        {imageOverlay ? (<CardImgOverlay> {children} </CardImgOverlay>) : (<CardBody> {children} </CardBody>)}\n        {footer !== undefined ? <CardFooter className=\"text-muted\"> { footer } </CardFooter> : null}\n      </RSCard>\n    );\n\n    return card;\n  }\n}\n\nICard.propTypes = propTypes;\nICard.defaultProps = defaultProps;\nICard.displayName = 'ICard';\n\nexport default ICard;","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/card/Modal.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/card/Carousel.js",["231","232","233"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport ICardGroup from './CardGroup.js';\nimport ICarouselIndicators from './CarouselIndicator.js';\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselCaption,\n  CarouselIndicators\n} from 'reactstrap';\nimport _ from 'lodash';\n\nconst propTypes = {\n  color: PropTypes.string,\n  itemsPerSlide: PropTypes.number\n};\n\nconst defaultProps = {\n  color: 'primary',\n  itemsPerSlide: 3\n};\n\nclass ICarousel extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          activeIndex : 0,\n          animating: false,\n          children: [],\n          ...this.state\n      };\n  }\n\n  componentDidMount() {\n    const children = React.Children.map(this.props.children, (child, index) => {\n                                return React.cloneElement(child, {\n                                  index: index,\n                                  onDismiss: this.onDismiss})});\n    this.setState({children: children});\n  }\n\n  onDismiss = (child) => {\n    const children = _.filter(this.state.children, function(c) { if (c.props.index !== child.index ) {return true;}});\n    this.setState({children: children});\n  }\n\n  render () {\n      let {\n        color,\n        itemsPerSlide,\n        ...attributes\n      } = this.props;\n\n      const childGroups = _.chunk(this.state.children, itemsPerSlide);\n\n      const next = () => {\n        if (this.state.animating) return;\n        const nextIndex = this.state.activeIndex === childGroups.length - 1 ? 0 : this.state.activeIndex + 1;\n        this.setState({activeIndex : nextIndex});\n      }\n\n      const previous = () => {\n        if (this.state.animating) return;\n        const nextIndex = this.state.activeIndex === 0 ? childGroups.length - 1 : this.state.activeIndex - 1;\n        this.setState({activeIndex : nextIndex});\n      }\n\n      const goToIndex = (newIndex) => {\n        if (this.state.animating) return;\n        this.setState({activeIndex : newIndex});\n      }\n\n      const slides = _.map(childGroups, (child) => {\n        return (\n         <CarouselItem\n            onExiting={() => this.setState({animating : true})}\n            onExited={() => this.setState({animating : false})}\n          >\n            <ICardGroup cardsPerRow={itemsPerSlide}>\n                {child}\n            </ICardGroup>\n          </CarouselItem>\n        );\n      });\n\n      const carousel = (\n        <div>\n            <Carousel\n                activeIndex={this.state.activeIndex}\n                next={next}\n                previous={previous}\n            >\n                <ICarouselIndicators items={childGroups} activeIndex={this.state.activeIndex} onClickHandler={goToIndex} />\n                {slides}\n                <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n                <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n            </Carousel>\n        </div>\n      );\n\n      return carousel;\n  }\n}\n\nICarousel.propTypes = propTypes;\nICarousel.defaultProps = defaultProps;\nICarousel.displayName = 'ICarousel';\n\nexport default ICarousel;","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/nav/Nav.js",["234"],"import React  from 'react';\nimport PropTypes from 'prop-types';\nimport { Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Collapse } from 'reactstrap';\nimport IDropdown from '../dropdown/Dropdown.js';\nimport _ from 'lodash';\n\nfunction lazyFunction(f) {\n    return function () {\n        return f.apply(this, arguments);\n    };\n}\n\nvar lazyTreeType = lazyFunction(function () {\n    return propTypes;\n});\n\nconst propTypes = {\n    brand: PropTypes.string,\n    color: PropTypes.string,\n    navItems: PropTypes.arrayOf(lazyTreeType)\n};\n\nconst defaultProps = {\n    brand: \"Brand\",\n    color: \"light\",\n    navItems: []\n};\n\nclass INav extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            navItemsVisible : false,\n            ...this.state\n        };\n      }\n\n  toggleNavbar = () => {this.setState({navItemsVisible: !this.state.navItemsVisible});}\n  handleBoxToggle = () => console.log(\"onMouseEnter\");\n\n\n  render() {\n    let {\n      brand,\n      color,\n      navItems,\n      ...attributes\n    } = this.props;\n\n    navItems = _.map(navItems, (navItem) => {\n        return (<NavItem><NavLink href={navItem.link}>{navItem.name}</NavLink></NavItem>);\n    });\n\n    const nav = (\n      <Navbar fixed='top' color={color} light expand=\"md\">\n        <NavbarBrand href=\"/\" className=\"mr-auto\"> {brand} </NavbarBrand>\n        <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n        <Collapse isOpen={this.state.navItemsVisible} navbar>\n          <Nav navbar>\n            <NavItem><NavLink href=\"/\">A</NavLink></NavItem>\n            <NavItem><NavLink href=\"/\">B</NavLink></NavItem>\n            <NavItem><IDropdown nav color={color} size=\"sm\" direction=\"right\" actions={[{name: '1', status: 'header'}, {name: '2', href: \"/menu\",\n            submenu: { actions: [{name: '2.1'}, {name: '2.2'}, {name: '2.3'}, {name: '2.4'}]}}]}>C</IDropdown></NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n\n    return nav;\n  }\n}\n\nINav.propTypes = propTypes;\nINav.defaultProps = defaultProps;\nINav.displayName = 'INav';\n\nexport default INav;","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/card/Table.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/alert/AlertLink.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/Base.js",["235"],"import React  from 'react';\nimport PropTypes from 'prop-types';\nimport IButton from './button/Button.js';\nimport { Collapse } from 'reactstrap';\nimport _ from 'lodash';\n\nexport const withDismiss = (Component) => {\n  class Dismiss extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        visible: true\n      };\n    }\n\n    render() {\n      let {\n          dismissible,\n          ...passThroughProps\n      } = this.props;\n\n      if (dismissible) {\n          const dismissButton = <IButton size=\"sm\" color = {passThroughProps.color} close onClick={() => {this.setState({visible: false});\n              }} />;\n          passThroughProps.children = _.isArray(passThroughProps.children) ? passThroughProps.children.concat(dismissButton) : [passThroughProps.children, dismissButton];\n      }\n\n      return (\n          <Collapse\n              isOpen={this.state.visible}>\n              <Component {...passThroughProps} />\n          </Collapse>\n      );\n    }\n  }\n\n  Dismiss.propTypes = { dismissible: PropTypes.bool };\n  Dismiss.defaultProps = { dismissible: true };\n  Dismiss.displayName = 'Dismiss';\n\n  return Dismiss;\n}\n\nexport const withToggle = (Component) => {\n  class Toggle extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        visible: true\n      };\n    }\n\n    toggle = () => {this.setState({visible: !this.state.visible});}\n\n    render() {\n      let {\n          toggle,\n          toggleText,\n          ...passThroughProps\n      } = this.props;\n\n      let toggleButton;\n\n      if (toggle) {\n        toggleButton = <IButton size=\"sm\" color = {passThroughProps.color} onClick={this.toggle} > {toggleText || \"Toggle\"} </IButton>;\n      }\n\n      return (\n          <div>\n          {toggleButton}\n          <Collapse\n              isOpen={this.state.visible}>\n              <Component {...passThroughProps} />\n          </Collapse>\n          </div>\n      );\n    }\n  }\n\n  Toggle.propTypes = {\n    toggle: PropTypes.bool,\n    toggleText: PropTypes.string\n  };\n\n  Toggle.defaultProps = { toggle: true, toggleText: \"Toggle\" };\n  Toggle.displayName = 'Toggle';\n\n  return Toggle;\n}\n\nexport const withScroll = (Component) => {\n  class Scroll extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n\n    render() {\n      let {\n          scrollable,\n          ...passThroughProps\n      } = this.props;\n\n      passThroughProps.className = 'scroll';\n\n      return (\n          <Component {...passThroughProps} />\n      );\n    }\n  }\n\n  Scroll.propTypes = {\n    scrollable: PropTypes.bool\n  };\n\n  Scroll.defaultProps = { scrollable: true};\n  Scroll.displayName = 'Scroll';\n\n  return Scroll;\n}\n","/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/nav/Tab.js",["236"],"import React  from 'react';\nimport PropTypes from 'prop-types';\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\n\nconst propTypes = {\n    tabs: PropTypes.arrayOf(PropTypes.shape({\n        tabHeading: PropTypes.string,\n        tabContent: PropTypes.any\n    })).isRequired\n};\n\nconst defaultProps = {\n};\n\nclass ITab extends React.Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n          activeTabIndex : 0,\n          ...this.state\n      };\n    }\n\n  toggle = tabIndex => {\n      if(this.state.activeTabIndex !== tabIndex) {\n        this.setState({activeTabIndex: tabIndex});\n      }\n  }\n\n  render() {\n    let {\n      tabs,\n      ...attributes\n    } = this.props;\n\n    const navItems = tabs.map((tab, index) => {\n        return (<NavItem>\n                  <NavLink onClick={() => { this.toggle(index); }}>\n                    {tab.tabHeading}\n                  </NavLink>\n                 </NavItem>);\n    });\n\n    const tabPanes = tabs.map((tab, index) => {\n        return (<TabPane tabId={index}>{tab.tabContent}</TabPane>);\n    });\n\n    const tab = (\n      <div>\n        <Nav tabs>\n          {navItems}\n        </Nav>\n        <TabContent activeTab={this.state.activeTabIndex}>\n          {tabPanes}\n        </TabContent>\n      </div>\n    );\n\n    return tab;\n  }\n}\n\nITab.propTypes = propTypes;\nITab.defaultProps = defaultProps;\nITab.displayName = 'ITab';\n\nexport default ITab;","/Users/Priya/Documents/Start Up Old/webapp/src/redux/selectors.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/redux/ActionTypes.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/shared/baseUrl.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/utils.js",[],"/Users/Priya/Documents/Start Up Old/webapp/src/basicComponents/card/CarouselIndicator.js",["237","238"],"import React  from 'react';\nimport { CarouselIndicators as RSCarouselIndicators, List, ListInlineItem } from 'reactstrap';\n\nclass ICarouselIndicators extends React.Component {\n\n  render() {\n    let {\n      activeIndex,\n      items,\n      onClickHandler,\n      ...attributes\n    } = this.props;\n\n    const indicators = items.map((item, idx) => {\n        return (\n          <ListInlineItem\n            key={`${item.key || Object.values(item).join('')}`}\n            onClick={(e) => {\n              onClickHandler(idx);\n            }}\n          > <i className=\"fa fa-circle\"></i> </ListInlineItem>);\n      });\n\n    const carouselIndicators = (\n        <List className=\"carousel-indicators\">\n            {indicators}\n        </List>\n    );\n\n    return carouselIndicators;\n  }\n}\n\nICarouselIndicators.displayName = 'ICarouselIndicators';\n\nexport default ICarouselIndicators;",{"ruleId":"239","severity":2,"message":"240","line":83,"column":14,"nodeType":"241","messageId":"242","endLine":83,"endColumn":20},{"ruleId":"243","severity":1,"message":"244","line":3,"column":36,"nodeType":"241","messageId":"245","endLine":3,"endColumn":44},{"ruleId":"243","severity":1,"message":"246","line":3,"column":46,"nodeType":"241","messageId":"245","endLine":3,"endColumn":50},{"ruleId":"243","severity":1,"message":"247","line":3,"column":52,"nodeType":"241","messageId":"245","endLine":3,"endColumn":60},{"ruleId":"243","severity":1,"message":"248","line":3,"column":62,"nodeType":"241","messageId":"245","endLine":3,"endColumn":74},{"ruleId":"243","severity":1,"message":"249","line":3,"column":76,"nodeType":"241","messageId":"245","endLine":3,"endColumn":85},{"ruleId":"243","severity":1,"message":"250","line":3,"column":87,"nodeType":"241","messageId":"245","endLine":3,"endColumn":94},{"ruleId":"243","severity":1,"message":"251","line":3,"column":96,"nodeType":"241","messageId":"245","endLine":3,"endColumn":104},{"ruleId":"243","severity":1,"message":"252","line":3,"column":106,"nodeType":"241","messageId":"245","endLine":3,"endColumn":112},{"ruleId":"243","severity":1,"message":"253","line":14,"column":8,"nodeType":"241","messageId":"245","endLine":14,"endColumn":13},{"ruleId":"243","severity":1,"message":"254","line":15,"column":8,"nodeType":"241","messageId":"245","endLine":15,"endColumn":18},{"ruleId":"243","severity":1,"message":"255","line":16,"column":8,"nodeType":"241","messageId":"245","endLine":16,"endColumn":17},{"ruleId":"243","severity":1,"message":"256","line":21,"column":10,"nodeType":"241","messageId":"245","endLine":21,"endColumn":15},{"ruleId":"243","severity":1,"message":"257","line":22,"column":10,"nodeType":"241","messageId":"245","endLine":22,"endColumn":19},{"ruleId":"243","severity":1,"message":"258","line":22,"column":21,"nodeType":"241","messageId":"245","endLine":22,"endColumn":24},{"ruleId":"243","severity":1,"message":"259","line":22,"column":26,"nodeType":"241","messageId":"245","endLine":22,"endColumn":29},{"ruleId":"243","severity":1,"message":"260","line":22,"column":31,"nodeType":"241","messageId":"245","endLine":22,"endColumn":40},{"ruleId":"243","severity":1,"message":"261","line":22,"column":42,"nodeType":"241","messageId":"245","endLine":22,"endColumn":53},{"ruleId":"243","severity":1,"message":"262","line":99,"column":15,"nodeType":"241","messageId":"245","endLine":99,"endColumn":20},{"ruleId":"243","severity":1,"message":"263","line":120,"column":15,"nodeType":"241","messageId":"245","endLine":120,"endColumn":27},{"ruleId":"264","severity":1,"message":"265","line":135,"column":33,"nodeType":"266","messageId":"267","endLine":141,"endColumn":40},{"ruleId":"264","severity":1,"message":"265","line":157,"column":33,"nodeType":"266","messageId":"267","endLine":163,"endColumn":40},{"ruleId":"264","severity":1,"message":"265","line":179,"column":33,"nodeType":"266","messageId":"267","endLine":185,"endColumn":40},{"ruleId":"264","severity":1,"message":"265","line":202,"column":33,"nodeType":"266","messageId":"267","endLine":208,"endColumn":40},{"ruleId":null,"fatal":true,"severity":2,"message":"268","line":13,"column":17},{"ruleId":"243","severity":1,"message":"269","line":5,"column":8,"nodeType":"241","messageId":"245","endLine":5,"endColumn":15},{"ruleId":"243","severity":1,"message":"270","line":6,"column":8,"nodeType":"241","messageId":"245","endLine":6,"endColumn":20},{"ruleId":"243","severity":1,"message":"271","line":7,"column":74,"nodeType":"241","messageId":"245","endLine":7,"endColumn":85},{"ruleId":"272","severity":1,"message":"273","line":60,"column":5,"nodeType":"274","messageId":"275","endLine":146,"endColumn":6},{"ruleId":"243","severity":1,"message":"276","line":67,"column":29,"nodeType":"241","messageId":"245","endLine":67,"endColumn":34},{"ruleId":"243","severity":1,"message":"276","line":82,"column":29,"nodeType":"241","messageId":"245","endLine":82,"endColumn":34},{"ruleId":"277","severity":1,"message":"278","line":136,"column":58,"nodeType":"279","messageId":"280","endLine":136,"endColumn":59,"suggestions":"281"},{"ruleId":"277","severity":1,"message":"278","line":136,"column":70,"nodeType":"279","messageId":"280","endLine":136,"endColumn":71,"suggestions":"282"},{"ruleId":"277","severity":1,"message":"283","line":136,"column":83,"nodeType":"279","messageId":"280","endLine":136,"endColumn":84,"suggestions":"284"},{"ruleId":"277","severity":1,"message":"285","line":136,"column":87,"nodeType":"279","messageId":"280","endLine":136,"endColumn":88,"suggestions":"286"},{"ruleId":"277","severity":1,"message":"287","line":136,"column":89,"nodeType":"279","messageId":"280","endLine":136,"endColumn":90,"suggestions":"288"},{"ruleId":"277","severity":1,"message":"289","line":136,"column":91,"nodeType":"279","messageId":"280","endLine":136,"endColumn":92,"suggestions":"290"},{"ruleId":"277","severity":1,"message":"291","line":136,"column":93,"nodeType":"279","messageId":"280","endLine":136,"endColumn":94,"suggestions":"292"},{"ruleId":"243","severity":1,"message":"276","line":137,"column":29,"nodeType":"241","messageId":"245","endLine":137,"endColumn":34},{"ruleId":"243","severity":1,"message":"293","line":3,"column":8,"nodeType":"241","messageId":"245","endLine":3,"endColumn":9},{"ruleId":"243","severity":1,"message":"253","line":4,"column":8,"nodeType":"241","messageId":"245","endLine":4,"endColumn":13},{"ruleId":"243","severity":1,"message":"257","line":5,"column":10,"nodeType":"241","messageId":"245","endLine":5,"endColumn":19},{"ruleId":"243","severity":1,"message":"258","line":5,"column":21,"nodeType":"241","messageId":"245","endLine":5,"endColumn":24},{"ruleId":"243","severity":1,"message":"259","line":5,"column":26,"nodeType":"241","messageId":"245","endLine":5,"endColumn":29},{"ruleId":"272","severity":1,"message":"273","line":52,"column":5,"nodeType":"274","messageId":"275","endLine":59,"endColumn":6},{"ruleId":"243","severity":1,"message":"294","line":9,"column":3,"nodeType":"241","messageId":"245","endLine":9,"endColumn":18},{"ruleId":"243","severity":1,"message":"295","line":10,"column":3,"nodeType":"241","messageId":"245","endLine":10,"endColumn":21},{"ruleId":"243","severity":1,"message":"296","line":52,"column":12,"nodeType":"241","messageId":"245","endLine":52,"endColumn":22},{"ruleId":"243","severity":1,"message":"296","line":48,"column":10,"nodeType":"241","messageId":"245","endLine":48,"endColumn":20},{"ruleId":"297","severity":1,"message":"298","line":95,"column":5,"nodeType":"299","messageId":"300","endLine":97,"endColumn":6},{"ruleId":"243","severity":1,"message":"296","line":34,"column":10,"nodeType":"241","messageId":"245","endLine":34,"endColumn":20},{"ruleId":"243","severity":1,"message":"301","line":2,"column":32,"nodeType":"241","messageId":"245","endLine":2,"endColumn":52},{"ruleId":"243","severity":1,"message":"296","line":11,"column":10,"nodeType":"241","messageId":"245","endLine":11,"endColumn":20},"no-undef","'dishes' is not defined.","Identifier","undef","no-unused-vars","'CardDeck' is defined but never used.","unusedVar","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardSubtitle' is defined but never used.","'CardTitle' is defined but never used.","'CardImg' is defined but never used.","'CardText' is defined but never used.","'Button' is defined but never used.","'ICard' is defined but never used.","'ICardGroup' is defined but never used.","'ICarousel' is defined but never used.","'Media' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'CardGroup' is defined but never used.","'CardColumns' is defined but never used.","'items' is assigned a value but never used.","'toggleButton' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Parsing error: Unexpected token, expected \"(\"\n\n\u001b[0m \u001b[90m 11 |\u001b[39m }\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 |\u001b[39m \u001b[36mfunction\u001b[39m \u001b[33mIAlert\u001b[39m \u001b[33m=\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 |\u001b[39m   render() {\u001b[0m\n\u001b[0m \u001b[90m 16 |\u001b[39m     \u001b[36mlet\u001b[39m {\u001b[0m","'IButton' is defined but never used.","'IButtonGroup' is defined but never used.","'CustomInput' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'valid' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["302","303"],["304","305"],"Unnecessary escape character: \\$.",["306","307"],"Unnecessary escape character: \\(.",["308","309"],"Unnecessary escape character: \\).",["310","311"],"Unnecessary escape character: \\*.",["312","313"],"Unnecessary escape character: \\+.",["314","315"],"'_' is defined but never used.","'CarouselCaption' is defined but never used.","'CarouselIndicators' is defined but never used.","'attributes' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'RSCarouselIndicators' is defined but never used.",{"messageId":"316","fix":"317","desc":"318"},{"messageId":"319","fix":"320","desc":"321"},{"messageId":"316","fix":"322","desc":"318"},{"messageId":"319","fix":"323","desc":"321"},{"messageId":"316","fix":"324","desc":"318"},{"messageId":"319","fix":"325","desc":"321"},{"messageId":"316","fix":"326","desc":"318"},{"messageId":"319","fix":"327","desc":"321"},{"messageId":"316","fix":"328","desc":"318"},{"messageId":"319","fix":"329","desc":"321"},{"messageId":"316","fix":"330","desc":"318"},{"messageId":"319","fix":"331","desc":"321"},{"messageId":"316","fix":"332","desc":"318"},{"messageId":"319","fix":"333","desc":"321"},"removeEscape",{"range":"334","text":"335"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"336","text":"337"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"338","text":"335"},{"range":"339","text":"337"},{"range":"340","text":"335"},{"range":"341","text":"337"},{"range":"342","text":"335"},{"range":"343","text":"337"},{"range":"344","text":"335"},{"range":"345","text":"337"},{"range":"346","text":"335"},{"range":"347","text":"337"},{"range":"348","text":"335"},{"range":"349","text":"337"},[5262,5263],"",[5262,5262],"\\",[5274,5275],[5274,5274],[5287,5288],[5287,5287],[5291,5292],[5291,5291],[5293,5294],[5293,5293],[5295,5296],[5295,5295],[5297,5298],[5297,5297]]