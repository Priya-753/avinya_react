{"ast":null,"code":"var _jsxFileName = \"/Users/Priya/Documents/Start Up/webapp/src/basicComponents/card/Modal.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport IBase from '../Base.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst propTypes = {\n  header: PropTypes.string,\n  footer: PropTypes.element\n};\nconst defaultProps = {\n  header: 'Modal title'\n};\n\nclass IModal extends IBase {\n  render() {\n    let {\n      header,\n      footer,\n      ...attributes\n    } = this.props;\n\n    if (attributes.children === undefined) {\n      attributes.children = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is a modal. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 30\n      }, this);\n    }\n\n    if (attributes.footer === undefined) {\n      attributes.footer = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: toggle,\n          children: \"Do Something\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 34\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: toggle,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 97\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }, this);\n    }\n\n    const children = /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: attributes.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n\n    const modal = /*#__PURE__*/_jsxDEV(Modal, { ...attributes,\n      children: [header !== undefined ? /*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: [\" \", header, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }, this) : null, children, footer !== undefined ? /*#__PURE__*/_jsxDEV(ModalFooter, {\n        className: \"text-muted\",\n        children: [\" \", footer, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n\n    return super.render(modal);\n  }\n\n}\n\nIModal.propTypes = propTypes;\nIModal.defaultProps = defaultProps;\nIModal.displayName = 'IModal';\nexport default IModal;","map":{"version":3,"sources":["/Users/Priya/Documents/Start Up/webapp/src/basicComponents/card/Modal.js"],"names":["React","PropTypes","Modal","ModalHeader","ModalBody","ModalFooter","IBase","propTypes","header","string","footer","element","defaultProps","IModal","render","attributes","props","children","undefined","toggle","modal","displayName"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,WAAxC,QAA2D,YAA3D;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,MAAM,EAAEP,SAAS,CAACQ,MADF;AAEhBC,EAAAA,MAAM,EAAET,SAAS,CAACU;AAFF,CAAlB;AAKA,MAAMC,YAAY,GAAG;AACnBJ,EAAAA,MAAM,EAAE;AADW,CAArB;;AAIA,MAAMK,MAAN,SAAqBP,KAArB,CAA2B;AAEzBQ,EAAAA,MAAM,GAAG;AACP,QAAI;AACFN,MAAAA,MADE;AAEFE,MAAAA,MAFE;AAGF,SAAGK;AAHD,QAIA,KAAKC,KAJT;;AAMA,QAAID,UAAU,CAACE,QAAX,KAAwBC,SAA5B,EAAuC;AACpCH,MAAAA,UAAU,CAACE,QAAX,gBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAtB;AACF;;AACD,QAAIF,UAAU,CAACL,MAAX,KAAsBQ,SAA1B,EAAqC;AAClCH,MAAAA,UAAU,CAACL,MAAX,gBAAqB;AAAA,gCAAK,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAES,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAL,EAAoE,GAApE,eACoE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,WAAd;AAA0B,UAAA,OAAO,EAAEA,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADpE;AAAA;AAAA;AAAA;AAAA;AAAA,cAArB;AAEF;;AAED,UAAMF,QAAQ,gBACV,QAAC,SAAD;AAAA,gBACKF,UAAU,CAACE;AADhB;AAAA;AAAA;AAAA;AAAA,YADJ;;AAMA,UAAMG,KAAK,gBACT,QAAC,KAAD,OAEML,UAFN;AAAA,iBAIGP,MAAM,KAAKU,SAAX,gBAAuB,QAAC,WAAD;AAAA,wBAAgBV,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvB,GAAiE,IAJpE,EAKGS,QALH,EAMGP,MAAM,KAAKQ,SAAX,gBAAuB,QAAC,WAAD;AAAa,QAAA,SAAS,EAAC,YAAvB;AAAA,wBAAsCR,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvB,GAAsF,IANzF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;;AAWA,WAAO,MAAMI,MAAN,CAAaM,KAAb,CAAP;AACD;;AAnCwB;;AAsC3BP,MAAM,CAACN,SAAP,GAAmBA,SAAnB;AACAM,MAAM,CAACD,YAAP,GAAsBA,YAAtB;AACAC,MAAM,CAACQ,WAAP,GAAqB,QAArB;AAEA,eAAeR,MAAf","sourcesContent":["import React  from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport IBase from '../Base.js'\n\nconst propTypes = {\n  header: PropTypes.string,\n  footer: PropTypes.element\n};\n\nconst defaultProps = {\n  header: 'Modal title'\n};\n\nclass IModal extends IBase {\n\n  render() {\n    let {\n      header,\n      footer,\n      ...attributes\n    } = this.props;\n\n    if (attributes.children === undefined) {\n       attributes.children = <p>This is a modal. </p>\n    }\n    if (attributes.footer === undefined) {\n       attributes.footer = (<div><Button color=\"primary\" onClick={toggle}>Do Something</Button>{' '}\n                                                                                                <Button color=\"secondary\" onClick={toggle}>Cancel</Button></div>)\n    }\n\n    const children = (\n        <ModalBody>\n            {attributes.children}\n        </ModalBody>\n    );\n\n    const modal = (\n      <Modal\n        \n        {...attributes}\n      >\n        {header !== undefined ? <ModalHeader> { header } </ModalHeader> : null}\n        {children}\n        {footer !== undefined ? <ModalFooter className=\"text-muted\"> {footer} </ModalFooter> : null}\n      </Modal>\n    );\n\n    return super.render(modal);\n  }\n}\n\nIModal.propTypes = propTypes;\nIModal.defaultProps = defaultProps;\nIModal.displayName = 'IModal';\n\nexport default IModal;"]},"metadata":{},"sourceType":"module"}