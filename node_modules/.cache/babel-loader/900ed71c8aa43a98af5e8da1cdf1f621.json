{"ast":null,"code":"import _toConsumableArray from\"/Users/Priya/Documents/Start Up/webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{combineReducers}from'redux';import{Dishes}from'./dishes';import{Comments}from'./comments';import{Promotions}from'./promotions';import{Leaders}from'./leaders';import{configureStore,getDefaultMiddleware}from'@reduxjs/toolkit';import createSagaMiddleware from'redux-saga';import{mySaga}from'./sagas';var sagaMiddleware=createSagaMiddleware();var rootReducer=combineReducers({dishes:Dishes,comments:Comments,promotions:Promotions,leaders:Leaders});export var reduxStore=configureStore({reducer:rootReducer,middleware:[].concat(_toConsumableArray(getDefaultMiddleware()),[sagaMiddleware])});sagaMiddleware.run(mySaga);","map":{"version":3,"sources":["/Users/Priya/Documents/Start Up/webapp/src/redux/configureStore.js"],"names":["combineReducers","Dishes","Comments","Promotions","Leaders","configureStore","getDefaultMiddleware","createSagaMiddleware","mySaga","sagaMiddleware","rootReducer","dishes","comments","promotions","leaders","reduxStore","reducer","middleware","run"],"mappings":"qKAAA,OAAQA,eAAR,KAA8B,OAA9B,CACA,OAASC,MAAT,KAAuB,UAAvB,CACA,OAASC,QAAT,KAAyB,YAAzB,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,OAASC,OAAT,KAAwB,WAAxB,CACA,OAASC,cAAT,CAAyBC,oBAAzB,KAAqD,kBAArD,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CACA,OAASC,MAAT,KAAuB,SAAvB,CAEA,GAAMC,CAAAA,cAAc,CAAGF,oBAAoB,EAA3C,CAEA,GAAMG,CAAAA,WAAW,CAAGV,eAAe,CAAC,CAChBW,MAAM,CAAEV,MADQ,CAEhBW,QAAQ,CAAEV,QAFM,CAGhBW,UAAU,CAAEV,UAHI,CAIhBW,OAAO,CAAEV,OAJO,CAAD,CAAnC,CAOA,MAAO,IAAMW,CAAAA,UAAU,CAAGV,cAAc,CAAC,CACLW,OAAO,CAAEN,WADJ,CAELO,UAAU,8BAAMX,oBAAoB,EAA1B,GAA+BG,cAA/B,EAFL,CAAD,CAAjC,CAIPA,cAAc,CAACS,GAAf,CAAmBV,MAAnB","sourcesContent":["import {combineReducers} from 'redux';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport createSagaMiddleware from 'redux-saga'\nimport { mySaga } from './sagas'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst rootReducer = combineReducers({\n                    dishes: Dishes,\n                    comments: Comments,\n                    promotions: Promotions,\n                    leaders: Leaders\n                });\n\nexport const reduxStore = configureStore({\n                                    reducer: rootReducer,\n                                    middleware: [...getDefaultMiddleware(),  sagaMiddleware] })\n\nsagaMiddleware.run(mySaga);\n\n\n"]},"metadata":{},"sourceType":"module"}