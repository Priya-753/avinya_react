{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport { mySaga } from './sagas';\nconst sagaMiddleware = createSagaMiddleware();\nconst rootReducer = combineReducers({\n  dishes: Dishes,\n  comments: Comments,\n  promotions: Promotions,\n  leaders: Leaders\n});\nexport const reduxStore = configureStore({\n  reducer: rootReducer,\n  middleware: [...getDefaultMiddleware(), sagaMiddleware]\n});\nsagaMiddleware.run(mySaga);","map":{"version":3,"sources":["/Users/Priya/Documents/Start Up/webapp/src/redux/configureStore.js"],"names":["combineReducers","Dishes","Comments","Promotions","Leaders","configureStore","getDefaultMiddleware","createSagaMiddleware","mySaga","sagaMiddleware","rootReducer","dishes","comments","promotions","leaders","reduxStore","reducer","middleware","run"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,MAAT,QAAuB,SAAvB;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAEA,MAAMG,WAAW,GAAGV,eAAe,CAAC;AAChBW,EAAAA,MAAM,EAAEV,MADQ;AAEhBW,EAAAA,QAAQ,EAAEV,QAFM;AAGhBW,EAAAA,UAAU,EAAEV,UAHI;AAIhBW,EAAAA,OAAO,EAAEV;AAJO,CAAD,CAAnC;AAOA,OAAO,MAAMW,UAAU,GAAGV,cAAc,CAAC;AACLW,EAAAA,OAAO,EAAEN,WADJ;AAELO,EAAAA,UAAU,EAAE,CAAC,GAAGX,oBAAoB,EAAxB,EAA6BG,cAA7B;AAFP,CAAD,CAAjC;AAIPA,cAAc,CAACS,GAAf,CAAmBV,MAAnB","sourcesContent":["import {combineReducers} from 'redux';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport createSagaMiddleware from 'redux-saga'\nimport { mySaga } from './sagas'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst rootReducer = combineReducers({\n                    dishes: Dishes,\n                    comments: Comments,\n                    promotions: Promotions,\n                    leaders: Leaders\n                });\n\nexport const reduxStore = configureStore({\n                                    reducer: rootReducer,\n                                    middleware: [...getDefaultMiddleware(),  sagaMiddleware] })\n\nsagaMiddleware.run(mySaga);\n\n\n"]},"metadata":{},"sourceType":"module"}