{"ast":null,"code":"var _jsxFileName = \"/Users/Priya/Documents/Start Up/webapp/src/basicComponents/Base.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IButton from './button/Button.js';\nimport { Collapse } from 'reactstrap';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const withDismiss = Component => {\n  class Dismiss extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        visible: true\n      };\n    }\n\n    render() {\n      let {\n        dismissible,\n        ...passThroughProps\n      } = this.props;\n\n      if (dismissible) {\n        const dismissButton = /*#__PURE__*/_jsxDEV(IButton, {\n          size: \"sm\",\n          color: passThroughProps.color,\n          close: true,\n          onClick: () => {\n            this.setState({\n              visible: false\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 33\n        }, this);\n\n        passThroughProps.children = _.isArray(passThroughProps.children) ? passThroughProps.children.concat(dismissButton) : [passThroughProps.children, dismissButton];\n      }\n\n      return /*#__PURE__*/_jsxDEV(Collapse, {\n        isOpen: this.state.visible,\n        children: /*#__PURE__*/_jsxDEV(Component, { ...passThroughProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this);\n    }\n\n  }\n\n  Dismiss.propTypes = {\n    dismissible: PropTypes.bool\n  };\n  Dismiss.defaultProps = {\n    dismissible: true\n  };\n  Dismiss.displayName = 'Dismiss';\n  return Dismiss;\n};\nexport const withToggle = Component => {\n  class Toggle extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.toggle = () => {\n        this.setState({\n          visible: !this.state.visible\n        });\n      };\n\n      this.state = {\n        visible: true\n      };\n    }\n\n    render() {\n      let {\n        toggle,\n        toggleText,\n        ...passThroughProps\n      } = this.props;\n      let toggleButton;\n\n      if (toggle) {\n        toggleButton = /*#__PURE__*/_jsxDEV(IButton, {\n          size: \"sm\",\n          color: passThroughProps.color,\n          onClick: this.toggle,\n          children: [\" \", toggleText || \"Toggle\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 24\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [toggleButton, /*#__PURE__*/_jsxDEV(Collapse, {\n          isOpen: this.state.visible,\n          children: /*#__PURE__*/_jsxDEV(Component, { ...passThroughProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this);\n    }\n\n  }\n\n  Toggle.propTypes = {\n    toggle: PropTypes.bool,\n    toggleText: PropTypes.string\n  };\n  Toggle.defaultProps = {\n    toggle: true,\n    toggleText: \"Toggle\"\n  };\n  Toggle.displayName = 'Toggle';\n  return Toggle;\n};\nexport const withScroll = Component => {\n  class Scroll extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n\n    render() {\n      let {\n        scrollable,\n        ...passThroughProps\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(Component, { ...passThroughProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 14\n      }, this);\n    }\n\n  }\n\n  Scroll.propTypes = {\n    scrollable: PropTypes.bool\n  };\n  Scroll.defaultProps = {\n    scrollable: true\n  };\n  Scroll.displayName = 'Scroll';\n  return Scroll;\n};","map":{"version":3,"sources":["/Users/Priya/Documents/Start Up/webapp/src/basicComponents/Base.js"],"names":["React","PropTypes","IButton","Collapse","_","withDismiss","Component","Dismiss","constructor","props","state","visible","render","dismissible","passThroughProps","dismissButton","color","setState","children","isArray","concat","propTypes","bool","defaultProps","displayName","withToggle","Toggle","toggle","toggleText","toggleButton","string","withScroll","Scroll","scrollable"],"mappings":"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","sourcesContent":["import React  from 'react';\nimport PropTypes from 'prop-types';\nimport IButton from './button/Button.js';\nimport { Collapse } from 'reactstrap';\nimport _ from 'lodash';\n\nexport const withDismiss = (Component) => {\n  class Dismiss extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        visible: true\n      };\n    }\n\n    render() {\n      let {\n          dismissible,\n          ...passThroughProps\n      } = this.props;\n\n      if (dismissible) {\n          const dismissButton = <IButton size=\"sm\" color = {passThroughProps.color} close onClick={() => {this.setState({visible: false});\n              }} />;\n          passThroughProps.children = _.isArray(passThroughProps.children) ? passThroughProps.children.concat(dismissButton) : [passThroughProps.children, dismissButton];\n      }\n\n      return (\n          <Collapse\n              isOpen={this.state.visible}>\n              <Component {...passThroughProps} />\n          </Collapse>\n      );\n    }\n  }\n\n  Dismiss.propTypes = { dismissible: PropTypes.bool };\n  Dismiss.defaultProps = { dismissible: true };\n  Dismiss.displayName = 'Dismiss';\n\n  return Dismiss;\n}\n\nexport const withToggle = (Component) => {\n  class Toggle extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        visible: true\n      };\n    }\n\n    toggle = () => {this.setState({visible: !this.state.visible});}\n\n    render() {\n      let {\n          toggle,\n          toggleText,\n          ...passThroughProps\n      } = this.props;\n\n      let toggleButton;\n\n      if (toggle) {\n        toggleButton = <IButton size=\"sm\" color = {passThroughProps.color} onClick={this.toggle} > {toggleText || \"Toggle\"} </IButton>;\n      }\n\n      return (\n          <div>\n          {toggleButton}\n          <Collapse\n              isOpen={this.state.visible}>\n              <Component {...passThroughProps} />\n          </Collapse>\n          </div>\n      );\n    }\n  }\n\n  Toggle.propTypes = {\n    toggle: PropTypes.bool,\n    toggleText: PropTypes.string\n  };\n\n  Toggle.defaultProps = { toggle: true, toggleText: \"Toggle\" };\n  Toggle.displayName = 'Toggle';\n\n  return Toggle;\n}\n\nexport const withScroll = (Component) => {\n  class Scroll extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n\n    render() {\n      let {\n          scrollable,\n          ...passThroughProps\n      } = this.props;\n\n      return <Component {...passThroughProps} />;\n    }\n  }\n\n  Scroll.propTypes = {\n    scrollable: PropTypes.bool\n  };\n\n  Scroll.defaultProps = { scrollable: true};\n  Scroll.displayName = 'Scroll';\n\n  return Scroll;\n}\n"]},"metadata":{},"sourceType":"module"}