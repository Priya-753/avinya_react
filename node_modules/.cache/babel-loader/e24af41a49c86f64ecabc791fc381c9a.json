{"ast":null,"code":"var _jsxFileName = \"/Users/Priya/Documents/Start Up/webapp/src/basicComponents/alert/Alert.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert as RSAlert } from 'reactstrap';\nimport IBase from '../Base.js';\nimport { Collapse } from 'reactstrap';\nimport IButton from '../button/Button.js';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst propTypes = {\n  color: PropTypes.string\n};\nconst defaultProps = {\n  color: 'primary'\n};\n\nconst withDismissible = Component => {\n  class Dismissible extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        visible: true\n      };\n    }\n\n    render() {\n      let {\n        dismissible,\n        ...passThroughProps\n      } = this.props;\n\n      if (dismissible) {\n        const dismissButton = /*#__PURE__*/_jsxDEV(IButton, {\n          size: \"sm\",\n          color: passThroughProps.color,\n          close: true,\n          onClick: () => {\n            this.setState({\n              visible: false\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 33\n        }, this);\n\n        passThroughProps.children = _.isArray(passThroughProps.children) ? passThroughProps.children.concat(dismissButton) : [passThroughProps.children, dismissButton];\n      }\n\n      return /*#__PURE__*/_jsxDEV(Collapse, {\n        onExited: () => {\n          if (passThroughProps.onDismiss) {\n            passThroughProps.onDismiss(passThroughProps);\n          }\n        },\n        isOpen: this.state.visible,\n        ...passThroughProps,\n        children: /*#__PURE__*/_jsxDEV(Component, { ...passThroughProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this);\n    }\n\n  }\n\n  Dismissible.propTypes = {\n    dismissible: PropTypes.bool\n  };\n  Dismissible.defaultProps = {\n    dismissible: true\n  };\n  Dismissible.displayName = 'Dismissible';\n  return Dismissible;\n};\n\nconst withToggle = Component => {\n  class Toggle extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.toggle = () => {\n        this.setState({\n          visible: !this.state.visible\n        });\n      };\n\n      this.state = {\n        visible: true\n      };\n    }\n\n    render() {\n      let {\n        toggle,\n        toggleText,\n        ...passThroughProps\n      } = this.props;\n\n      if (toggle) {\n        toggleButton = /*#__PURE__*/_jsxDEV(IButton, {\n          size: \"sm\",\n          color: passThroughProps.color,\n          onClick: this.toggle,\n          children: [\" \", toggleText || \"Toggle\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 24\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [toggleButton, /*#__PURE__*/_jsxDEV(Collapse, {\n          onExited: () => {\n            if (passThroughProps.onDismiss) {\n              passThroughProps.onDismiss(passThroughProps);\n            }\n          },\n          isOpen: this.state.visible,\n          ...passThroughProps,\n          children: /*#__PURE__*/_jsxDEV(Component, { ...passThroughProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this);\n    }\n\n  }\n\n  Toggle.propTypes = {\n    toggle: PropTypes.bool,\n    toggleText: PropTypes.string\n  };\n  Toggle.defaultProps = {\n    toggle: true,\n    toggleText: \"Toggle\"\n  };\n  Toggle.displayName = 'Toggle';\n  return Toggle;\n};\n\nclass IAlert extends React.Component {\n  render() {\n    let {\n      color,\n      ...attributes\n    } = this.props;\n\n    if (attributes.children === undefined) {\n      attributes.children = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is an alert. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 30\n      }, this);\n    }\n\n    const alert = /*#__PURE__*/_jsxDEV(RSAlert, {\n      color: color,\n      ...attributes,\n      children: attributes.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n\n    return alert;\n  }\n\n}\n\nIAlert.propTypes = propTypes;\nIAlert.defaultProps = defaultProps;\nIAlert.displayName = 'IAlert';\nexport default _c2 = withToggle(_c = withDismissible(IAlert));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$withToggle\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/Priya/Documents/Start Up/webapp/src/basicComponents/alert/Alert.js"],"names":["React","PropTypes","Alert","RSAlert","IBase","Collapse","IButton","_","propTypes","color","string","defaultProps","withDismissible","Component","Dismissible","constructor","props","state","visible","render","dismissible","passThroughProps","dismissButton","setState","children","isArray","concat","onDismiss","bool","displayName","withToggle","Toggle","toggle","toggleText","toggleButton","IAlert","attributes","undefined","alert"],"mappings":"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","sourcesContent":["import React  from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert as RSAlert } from 'reactstrap';\nimport IBase from '../Base.js'\nimport { Collapse } from 'reactstrap';\nimport IButton from '../button/Button.js';\nimport _ from 'lodash';\n\nconst propTypes = {\n  color: PropTypes.string\n};\n\nconst defaultProps = {\n  color: 'primary',\n};\n\nconst withDismissible = (Component) => {\n  class Dismissible extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        visible: true\n      };\n    }\n\n    render() {\n      let {\n          dismissible,\n          ...passThroughProps\n      } = this.props;\n\n      if (dismissible) {\n          const dismissButton = <IButton size=\"sm\" color = {passThroughProps.color} close onClick={() => {this.setState({visible: false});\n              }} />;\n          passThroughProps.children = _.isArray(passThroughProps.children) ? passThroughProps.children.concat(dismissButton) : [passThroughProps.children, dismissButton];\n      }\n\n      return (\n          <Collapse\n              onExited={() => { if (passThroughProps.onDismiss) {passThroughProps.onDismiss(passThroughProps)}}}\n              isOpen={this.state.visible} {...passThroughProps}>\n              <Component {...passThroughProps} />\n          </Collapse>\n      );\n    }\n  }\n\n  Dismissible.propTypes = { dismissible: PropTypes.bool };\n  Dismissible.defaultProps = { dismissible: true };\n  Dismissible.displayName = 'Dismissible';\n\n  return Dismissible;\n}\n\nconst withToggle = (Component) => {\n  class Toggle extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        visible: true\n      };\n    }\n\n    toggle = () => {this.setState({visible: !this.state.visible});}\n\n    render() {\n      let {\n          toggle,\n          toggleText,\n          ...passThroughProps\n      } = this.props;\n\n      if (toggle) {\n        toggleButton = <IButton size=\"sm\" color = {passThroughProps.color} onClick={this.toggle} > {toggleText || \"Toggle\"} </IButton>;\n      }\n\n      return (\n          <div>\n          {toggleButton}\n          <Collapse\n              onExited={() => { if (passThroughProps.onDismiss) {passThroughProps.onDismiss(passThroughProps)}}}\n              isOpen={this.state.visible} {...passThroughProps}>\n              <Component {...passThroughProps} />\n          </Collapse>\n          </div>\n      );\n    }\n  }\n\n  Toggle.propTypes = {\n    toggle: PropTypes.bool,\n    toggleText: PropTypes.string\n  };\n\n  Toggle.defaultProps = { toggle: true, toggleText: \"Toggle\" };\n  Toggle.displayName = 'Toggle';\n\n  return Toggle;\n}\n\nclass IAlert extends React.Component {\n\n  render() {\n    let {\n      color,\n      ...attributes\n    } = this.props;\n\n    if (attributes.children === undefined) {\n       attributes.children = <p>This is an alert. </p>\n    }\n\n    const alert = (\n      <RSAlert\n        color = {color}\n        {...attributes}\n      >\n        {attributes.children}\n      </RSAlert>\n    );\n\n    return alert;\n  }\n}\n\nIAlert.propTypes = propTypes;\nIAlert.defaultProps = defaultProps;\nIAlert.displayName = 'IAlert';\n\nexport default withToggle(withDismissible(IAlert));"]},"metadata":{},"sourceType":"module"}